from cs231n.classifiers.k_nearest_neighbor import *
from cs231n.classifiers.linear_classifier import *
from cs231n.data_utils import *


# ------------------------------------------------------------------------------------------------------
# load data
Xtr, Ytr, Xte, Yte = load_CIFAR10('cs231n/datasets/cifar-10-batches-py/') # a magic function we provide
# flatten out all images to be one-dimensional
Xtr_rows = Xtr.reshape(Xtr.shape[0], 32 * 32 * 3) # Xtr_rows becomes 50000 x 3072
Xte_rows = Xte.reshape(Xte.shape[0], 32 * 32 * 3) # Xte_rows becomes 10000 x 3072


# ------------------------------------------------------------------------------------------------------
# train classifier
nn = KNearestNeighbor()            # create a Nearest Neighbor classifier class
nn.train(Xtr_rows, Ytr)            # train the classifier on the training images and labels
Yte_predict = nn.predict(Xte_rows,num_loops=0) # predict labels on the test images and now print the classification accuracy, which is the average number of examples that are correctly predicted (i.e. label matches)
print 'accuracy: %f' % ( np.mean(Yte_predict == Yte) )
